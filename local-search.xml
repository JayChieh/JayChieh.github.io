<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>math</title>
    <link href="/2020/10/06/math/"/>
    <url>/2020/10/06/math/</url>
    
    <content type="html"><![CDATA[<h1 id="数字IC设计职位经典笔试面试题"><a href="#数字IC设计职位经典笔试面试题" class="headerlink" title="数字IC设计职位经典笔试面试题"></a>数字IC设计职位经典笔试面试题</h1><ul><li><ol><li>什么是同步逻辑和异步逻辑？<br>同步逻辑是时钟之间有固定的因果关系。异步逻辑是各时钟之间没有固定的因果关系。</li></ol></li><li><ol start="2"><li>同步电路和异步电路的区别？</li></ol></li><li><ol start="3"><li>时序设计的实质？</li></ol></li><li><ol start="4"><li>建立时间和保持时间的概念？</li></ol></li><li><ol start="5"><li>为什么触发器要满足建立时间和保持时间？</li></ol></li><li><ol start="6"><li>什么亚稳态？为什么两级触发器可以防止亚稳态传播？</li></ol></li><li><ol start="7"><li>系统最高速度计算（最快时钟频率）和流水线设计思想？</li></ol></li><li><ol start="8"><li>时序约束的概念和基本策略？</li></ol></li><li><ol start="9"><li>附加约束的作用？</li></ol></li><li><ol start="10"><li>FPGA工程师努力的方向？</li></ol></li><li><ol start="11"><li>对于多位的异步信号如何同步？</li></ol></li><li><ol start="12"><li>FPGA和CPLD的区别？</li></ol></li><li><ol start="13"><li>锁存器（latch）和触发器(flip-flop)的区别？</li></ol></li><li><ol start="14"><li>FPGA芯片内有哪两种存储器资源？</li></ol></li><li><ol start="15"><li>什么是时钟抖动？</li></ol></li><li><ol start="16"><li>FPGA设计中对时钟的使用？（例如分频等）</li></ol></li><li><ol start="17"><li>FPGA设计中如何实现同步时序电路的延时？</li></ol></li><li><ol start="18"><li>FPGA中可以综合实现为RAM/ROM/CAM的三种资源及其注意事项？</li></ol></li><li><ol start="19"><li>IC设计前段到后端的流程和EDA工具？</li></ol></li><li><ol start="20"><li>寄生效应在IC设计中怎样加以克服和利用？（IC设计过程中将寄生效应的怎样反馈影响设计师的设计方案）</li></ol></li><li><ol start="21"><li>Xilinx中与全局时钟资源和DLL相关的硬件原语？</li></ol></li><li><ol start="22"><li>HDL语言的层次概念？</li></ol></li><li><ol start="23"><li>寄生效应在IC设计中怎样加以克服和利用？</li></ol></li><li><ol start="24"><li>用Verilog或VHDL写一段代码，实现消除一个glitch（毛刺）？</li></ol></li><li><ol start="25"><li>设计一个自动饮料售卖机，饮料10分钱，硬币有5分和10分两种，并考虑找零。<br>1）画出fsm（有限状态机）<br>2）用Verilog编程，语法要符合FPGA设计的要求<br>3）设计过程中可使用的工具及设计大致过程？</li></ol></li><li><ol start="26"><li>什么是“线与”逻辑，要实现它，在硬件特性上有什么具体要求？</li></ol></li><li><ol start="27"><li>什么是竞争与冒险现象？怎样判断？如何消除？</li></ol></li><li><ol start="28"><li>你知道哪些常用逻辑电平？TTL与CMOS电平可以直接互连吗？</li></ol></li><li><ol start="29"><li>IC设计中同步复位与异步复位的区别？</li></ol></li><li><ol start="30"><li>MOORE与MEELEY状态机的特征？</li></ol></li><li><ol start="31"><li>多时域设计中，如何处理信号跨时域？</li></ol></li><li><ol start="32"><li>说说静态、动态时序模拟的优缺点？</li></ol></li><li><ol start="33"><li>一个四级的Mux，其中第二级信号为关键信号如何改善timing?</li></ol></li><li><ol start="34"><li>给出一个门级的图，又给了各个门的传输延时，问关键路径是什么，还问给出输入，使得输出依赖于关键路径？</li></ol></li><li><ol start="35"><li>为什么一个标准的倒相器中P管的宽长要比N管的宽长比大？</li></ol></li><li><ol start="36"><li>用mos管搭出一个二输入与非门？</li></ol></li><li><ol start="37"><li>画出NOT，NAND,NOR的符号，真值表，还有transistor level（晶体管级）的电路？</li></ol></li><li><ol start="38"><li>画出CMOS的图，画出tow-to-one muxgate?</li></ol></li><li><ol start="39"><li>用一个二选一mux和一个inv实现异或？</li></ol></li><li><ol start="40"><li>画出CMOS电路的晶体管级电路图，实现Y=A<em>B+C</em>（D+E）？画出Y=A<em>B+C的CMOS电路图，画出Y=A</em>B+C*D的CMOS电路图。</li></ol></li><li><ol start="41"><li>用与非门等设计加法器？</li></ol></li><li><ol start="42"><li>A、B、C、D、E进行投票，少数服从多数，输出是F(也就是如果A,B,C,D,E中1的个数比0 多,那么F输出为1,否则F为0),用与非门实现,输入数目没有限制？（与非-与非形式）</li></ol></li><li><ol start="43"><li>画出一种CMOS的D锁存器的电路图和版图？</li></ol></li><li><ol start="44"><li>function 和 task有什么区别？</li></ol></li><li><ol start="45"><li>latch与register的区别,为什么现在多用register.行为级描述中latch如何产生的？ </li></ol></li><li><ol start="46"><li>用D触发器做个二分频的电路？画出逻辑电路？</li></ol></li><li><ol start="47"><li>什么是状态图？</li></ol></li><li><ol start="48"><li>用你熟悉的设计方式设计一个可预置初值的7进制循环计数器,15进制的呢？</li></ol></li><li><ol start="49"><li>功耗的来源是什么？</li></ol></li><li><ol start="50"><li>用Verilog或VHDL写一段代码,实现消除一个glitch（毛刺）？</li></ol></li><li><ol start="51"><li>SRAM,FLASH MEMORY,DRAM,SSRAM及SDRM的区别？<br>SRAM:静态随机存储器，取速度快，但容量小，掉电后数据会丢失，不像DRAM 需要不停的REFRESH，制造成本较高，通常用来作为快取(CACHE) 记忆体使用。</li></ol></li><li><ol start="52"><li>有四种复用方式，频分多路复用，写出另外三种？</li></ol></li><li><ol start="53"><li>ASIC设计流程中什么时候修正Setup time violation 和Hold time violation?如何修正？解释setup和hold time violation，画图说明，并说明解决办法。</li></ol></li><li><ol start="54"><li>给出一个组合逻辑电路，要求分析逻辑功能。</li></ol></li><li><ol start="55"><li>如何防止亚稳态？</li></ol></li><li><ol start="56"><li>基尔霍夫定理的内容？</li></ol></li><li><ol start="57"><li>描述反馈电路的概念，列举它们的作用。</li></ol></li><li><ol start="58"><li>无源滤波器和有源滤波器的区别？</li></ol></li><li><ol start="59"><li>给了reg的setup，hold时间，求中间组合逻辑的delay范围。</li></ol></li><li><ol start="60"><li>时钟周期为T,触发器D1的寄存器到输出时间（触发器延时Tco）最大为T1max，最小为 T1min。组合逻辑电路最大延迟为T2max,最小为T2min。问，触发器D2的建立时间T3和保持时间应满足什么条件。</li></ol></li><li><ol start="61"><li>锁存器和触发器的区别？</li></ol></li><li><ol start="62"><li>实现三分屏的电路，3/2分屏电路等（偶数倍分频奇数倍分频）</li></ol></li><li><ol start="63"><li>FPGA和CPLD的区别？</li></ol></li><li><ol start="64"><li>名词解释。<br>CMOS（Complementary Metal Oxide Semiconductor），互补金属氧化物半导体，电压控制的一种放大器件。是组成CMOS数字集成电路的基本单元。<br>  MCU(Micro Controller Unit)中文名称为微控制单元，又称单片微型计算机(Single Chip Microcomputer)或者单片机，是指随着大规模集成电路的出现及其发展，将计算机的CPU、RAM、ROM、定时数计器和多种I/O接口集成在一片芯片上，形成芯片级的计算机，为不同的应用场合做不同组合控制。<br>  RISC（reduced instruction set computer，精简指令集计算机）是一种执行较少类型计算机指令的微处理器，起源于80年代的MIPS主机（即RISC机），RISC机中采用的微处理器统称RISC处理器。这样一来，它能够以更快的速度执行操作（每秒执行更多百万条指令，即MIPS）。因为计算机执行每个指令类型都需要额外的晶体管和电路元件，计算机指令集越大就会使微处理器更复杂，执行操作也会更慢。 <br>  CISC是复杂指令系统计算机（Complex Instruction Set Computer）的简称，微处理器是台式计算机系统的基本处理部件，每个微处理器的核心是运行指令的电路。指令由完成任务的多个步骤所组成，把数值传送进寄存器或进行相加运算。 <br>    DSP（digital signal processor）是一种独特的微处理器，是以数字信号来处理大量信息的器件。其工作原理是接收模拟信号，转换为0或1的数字信号。再对数字信号进行修改、删除、强化，并在其他系统芯片中把数字数据解译回模拟数据或实际环境格式。它不仅具有可编程性，而且其实时运行速度可达每秒数以千 万条复杂指令程序，远远超过通用微处理器，是数字化电子世界中日益重要的电脑芯片。它的强大数据处理能力和高运行速度，是最值得称道的两大特色。<br>    FPGA（Field－Programmable GateArray），即现场可编程门阵列，它是在PAL、GAL、CPLD等可编程器件的基础上进一步发展的产物。它是作为专用集成电路（ASIC）领域中的一种半定制电路而出现的，既解决了定制电路的不足，又克服了原有可编程器件门电路数有限的缺点。<br>    ASIC:专用集成电路，它是面向专门用途的电路，专门为一个用户设计和制造的。根据一个用户的特定要求，能以低研制成本，短、交货周期供货的全定制，半定制集成电路。与门阵列等其它ASIC (ApplicationSpecific IC)相比，它们又具有设计开发周期短、设计制造成本低、开发工具先进、标准产品无需测试、质量稳定以及可实时在线检验等优点 PCI(Peripheral Component Interconnect) 外围组件互连，一种由英特尔（Intel）公司1991年推出的用于定义局部总线的标准。<br>     ECC是“Error Correcting Code”的简写，中文名称是“错误检查和纠正”。ECC是一种能够实现“错误检查和纠正”的技术，ECC内存就是应用了这种技术的内存，一般多应用在服务器及图形工作站上，这将使整个电脑系统在工作时更趋于安全稳定。<br>    DDR=Double Data Rate双倍速率同步动态随机存储器。严格的说DDR应该叫DDR SDRAM，人们习惯称为DDR，其中，SDRAM 是Synchronous Dynamic Random Access Memory的缩写，即同步动态随机存取存储器。<br>     IRQ全称为Interrupt Request，即是“中断请求”的意思（以下使用IRQ称呼）。IRQ的作用就是在我们所用的电脑中，执行硬件中断请求的动作，用来停止其相关硬件的工作状态。<br>   USB ,是英文Universal Serial BUS（通用串行总线）的缩写，而其中文简称为“通串线，是一个外部总线标准，用于规范电脑与外部设备的连接和通讯。<br>  BIOS是英文"Basic Input Output System"的缩略语，直译过来后中文名称就是"基本输入输出系统"。其实，它是一组固化到计算机内主板上一个ROM芯片上的程序，它保存着计算机最重要的基本输入输出的程序、系统设置信息、开机后自检程序和系统自启动程序。其主要功能是为计算机提供最底层的、最直接的硬件设置和控制。</li></ol></li><li><ol start="65"><li>三极管特性曲线。</li></ol></li><li><ol start="66"><li>用D触发器做个4进制的计数。</li></ol></li><li><ol start="67"><li>画出DFF的结构图，用verilog实现之。</li></ol></li><li><ol start="68"><li>用Verilog或VHDL写一段代码，实现十进制计数器。</li></ol></li><li><ol start="69"><li>用波形表示D触发器的功能。</li></ol></li><li><ol start="70"><li>用传输门和倒向器搭一个边沿触发器（DFF）。</li></ol></li><li><ol start="71"><li>什么叫做OTP片（一次性可编程）、掩膜片，两者的区别何在？</li></ol></li><li><ol start="72"><li>描述你对集成电路设计流程的认识。</li></ol></li><li><ol start="73"><li>描述你对集成电路工艺的认识。</li></ol></li><li><ol start="74"><li>设计一个自动饮料售卖机，饮料10分钱，硬币有5分和10分两种，并考虑找零：（1）画出fsm（有限状态机）；（2）用verilog编程，语法要符合fpga设计的要求；（3）设计工程中可使用的工具及设计大致过程。</li></ol></li><li><ol start="75"><li>画出可以检测10010串的状态图，并verilog实现之。</li></ol></li><li><ol start="76"><li>给出单管DRAM的原理图</li></ol></li><li><ol start="77"><li>画出DFF的结构图，用verilog实现之。</li></ol></li><li><ol start="78"><li>从RTL Synthesis到tape out之间的设计flow，并列出其中各步使用的tool。</li></ol></li><li><ol start="79"><li>分别写出IC设计前段到后端的流程和eda工具</li></ol></li><li><ol start="80"><li>是否接触过自动布线？请说出一两种设计工具。自动布局布线需要。</li></ol></li></ul>]]></content>
    
    
    <categories>
      
      <category>Sept</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>开篇词</title>
    <link href="/2020/09/30/%E5%BC%80%E7%AF%87%E8%AF%8D%EF%BC%9Akizzi-s-EE-World/"/>
    <url>/2020/09/30/%E5%BC%80%E7%AF%87%E8%AF%8D%EF%BC%9Akizzi-s-EE-World/</url>
    
    <content type="html"><![CDATA[<p>你好哇。  </p><p>我是一名EE专业的在读研究生，专业方向为电力电子与电力传动。长期以来，我在网上查阅了很多资料，包括论文、教材和个人博客，从中学习了很多知识，受益匪浅。然而，网络上的这些内容往往存在一些小差错，这就给包括我在内的读者带来了一些困惑。基于此，本网站将会记录一些我觉得有必要的内容，也有一些个人的学习体会和知识的系统总结。由于是专业内容，所以未免会有阅读门槛，需要读者有一定的阅读基础。</p><h4 id="关于本站"><a href="#关于本站" class="headerlink" title="关于本站"></a>关于本站</h4><ul><li>本网站基于Hexo框架建站</li><li>部署在Github上</li><li>域名购买自GoDaddy</li><li>建站模板基于开源的Fluid</li><li>文章排版采用Markdown和LaTex </li></ul><p>本博客涉及内容主要有但不限于以下几个方面：  </p><h3 id="一、电机控制理论及建模、仿真"><a href="#一、电机控制理论及建模、仿真" class="headerlink" title="一、电机控制理论及建模、仿真"></a>一、电机控制理论及建模、仿真</h3><h4 id="深入浅出理解SVPWM"><a href="#深入浅出理解SVPWM" class="headerlink" title="深入浅出理解SVPWM"></a>深入浅出理解SVPWM</h4><ul><li>SVPWM理论推导</li><li>SVPWM常见的几个错误理解</li><li>SVPWM与SPWM本质区别与联系</li><li>七段式与五段式SVPWM</li><li>SVPWM的仿真与代码实现<h4 id="坐标变换与磁场定向控制"><a href="#坐标变换与磁场定向控制" class="headerlink" title="坐标变换与磁场定向控制"></a>坐标变换与磁场定向控制</h4></li><li>磁场定向控制的理论推导</li><li>矢量、向量、相量、标量的理解与辨析</li><li>等幅值变换与等功率变换的区别与联系</li><li>不同坐标变换下的电机模型</li><li>坐标变换和FOC的本质<h4 id="常见电机控制算法"><a href="#常见电机控制算法" class="headerlink" title="常见电机控制算法"></a>常见电机控制算法</h4></li><li>FOC</li><li>DTC</li><li>MPC</li><li>MTPA<h4 id="特种电机控制"><a href="#特种电机控制" class="headerlink" title="特种电机控制"></a>特种电机控制</h4></li><li>BLDC</li><li>PMSM</li><li>SRM<h4 id="电力电子技术相关"><a href="#电力电子技术相关" class="headerlink" title="电力电子技术相关"></a>电力电子技术相关</h4></li><li>电力电子系统建模及控制</li><li>小信号分析法</li><li>常见电力电子仿真工具的使用</li></ul><h3 id="二、相关专业软件使用"><a href="#二、相关专业软件使用" class="headerlink" title="二、相关专业软件使用"></a>二、相关专业软件使用</h3><h4 id="MATLAB-Simulink"><a href="#MATLAB-Simulink" class="headerlink" title="MATLAB/Simulink"></a>MATLAB/Simulink</h4><ul><li>面向对象编程（OOP）</li><li>APP Designer/GUI使用</li><li>MATLAB与C/C++/Python混合编程</li><li>Simulink嵌入式仿真</li><li>Simulink电机建模</li><li>S-Function使用</li><li>Stateflow使用</li><li>其他进阶技术与应用<h4 id="Saber"><a href="#Saber" class="headerlink" title="Saber"></a>Saber</h4></li><li>数模混合仿真</li><li>Mast语言及建模</li><li>自建模块库与接口封装技术</li><li>常见错误处理与其他应用技巧<h4 id="LabVIEW"><a href="#LabVIEW" class="headerlink" title="LabVIEW"></a>LabVIEW</h4></li><li>面向对象编程（OOP）</li><li>串口通信技术</li><li>生产者消费者模型</li><li>状态机设计</li><li>与MATLAB/Simulink联合仿真</li></ul>]]></content>
    
    
    <categories>
      
      <category>Sept</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Simulink</tag>
      
      <tag>Saber</tag>
      
      <tag>EE</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
